{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","m","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLocaleLowerCase","includes","toLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAAAC,GAEhB,OAAO,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFjBC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAC,GAAC,OAEjB,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,WCNZO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SACLd,UAAU,SACVY,YAAaA,EACbG,SAAUF,MCqCNG,E,kDArCX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAQVc,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SARrC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJF,E,qDAcnB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAGhD,WAAU,IAAD,EAC2BC,KAAKN,MAA9Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACXU,EAAmBrB,EAASsB,QAAO,SAAApB,GAAC,OAAIA,EAAEL,KAAK0B,oBAAoBC,SAASb,EAAYc,kBAC9F,OACI,sBAAKjC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUL,SAAUqB,W,GA5BlBK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.727c0233.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\nexport const Card = props => {\n\n    return <div className='card-container'>\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}/>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n\n    </div>;\n}","import React from 'react';\nimport {Card} from \"../card/card\";\n\nimport './card-list.style.css';\n\nexport const CardList = props => {\n    return <div className='card-list'>\n        {props.monsters.map(m=>(\n\n            <Card key={m.id} monster={m}/>\n        ))}\n    </div>;\n}","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input type='search'\n           className='search'\n           placeholder={placeholder}\n           onChange={handleChange}/>\n);\n","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list\";\nimport {SearchBox} from \"./components/search-box/search-box\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n\n    }\n\n    handleChange = (e) =>{\n        this.setState({searchField: e.target.value});\n    }\n\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}))\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filteredMonsters = monsters.filter(m => m.name.toLocaleLowerCase().includes(searchField.toLowerCase()));\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonsters}>\n                </CardList>\n            </div>\n        );\n    }\n}\n\n// {/*<header className=\"App-header\">*/}\n// {/*    <img src={logo} className=\"App-logo\" alt=\"logo\"/>*/}\n// {/*</header>*/}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}